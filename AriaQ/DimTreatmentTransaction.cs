//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AriaQ
{
    using System;
    using System.Collections.Generic;
    
    public partial class DimTreatmentTransaction
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public DimTreatmentTransaction()
        {
            this.FactTreatmentHistories = new HashSet<FactTreatmentHistory>();
        }
    
        public long DimTreatmentTransactionID { get; set; }
        public Nullable<long> DimFieldID { get; set; }
        public Nullable<long> DimPlanID { get; set; }
        public Nullable<long> DimCourseID { get; set; }
        public Nullable<double> CouchLat { get; set; }
        public Nullable<byte> CouchLatOverrideFlag { get; set; }
        public Nullable<double> CouchLng { get; set; }
        public Nullable<byte> CouchLngOverrideFlag { get; set; }
        public Nullable<double> CouchVrt { get; set; }
        public Nullable<byte> CouchVrtOverrideFlag { get; set; }
        public string HistoryNote { get; set; }
        public Nullable<byte> EnergyModeOverrideFlag { get; set; }
        public Nullable<byte> MetersetOverrideFlag { get; set; }
        public Nullable<byte> PatSupPitchOverrideFlag { get; set; }
        public Nullable<byte> PatSupRollOverrideFlag { get; set; }
        public Nullable<double> PatSupportPitchAngle { get; set; }
        public Nullable<double> PatSupportRollAngle { get; set; }
        public Nullable<double> PatientSupportAngle { get; set; }
        public Nullable<byte> PatientSupportAngleOverFlag { get; set; }
        public Nullable<double> SSD { get; set; }
        public Nullable<byte> SSDOverrideFlag { get; set; }
        public string ActualCollMode { get; set; }
        public string ActualGantryRtnExt { get; set; }
        public Nullable<double> ActualWedgeDose { get; set; }
        public string BeamCurrentModulationId { get; set; }
        public string BeamModifiersSet { get; set; }
        public string BeamOffCode { get; set; }
        public Nullable<byte> CollModeOverrideFlag { get; set; }
        public Nullable<double> CollRtn { get; set; }
        public Nullable<byte> CollRtnOverrideFlag { get; set; }
        public Nullable<double> CollX1 { get; set; }
        public Nullable<byte> CollX1OverrideFlag { get; set; }
        public Nullable<double> CollX2 { get; set; }
        public Nullable<byte> CollX2OverrideFlag { get; set; }
        public Nullable<double> CollY1 { get; set; }
        public Nullable<byte> CollY1OverrideFlag { get; set; }
        public Nullable<double> CollY2 { get; set; }
        public Nullable<byte> CollY2OverrideFlag { get; set; }
        public Nullable<double> CouchCorrectionLat { get; set; }
        public Nullable<double> CouchCorrectionLng { get; set; }
        public Nullable<double> CouchCorrectionVrt { get; set; }
        public Nullable<System.DateTime> HstryDateTime { get; set; }
        public string HstryTaskName { get; set; }
        public string HstryUserName { get; set; }
        public Nullable<int> LastCorrelatedEventNumber { get; set; }
        public Nullable<int> LastEventNumber { get; set; }
        public Nullable<int> LastFractionNumber { get; set; }
        public Nullable<int> LastFractionNumberCalc { get; set; }
        public Nullable<byte> MachOverrideFlag { get; set; }
        public Nullable<double> MUpDeg { get; set; }
        public Nullable<byte> MUpDegOverrideFlag { get; set; }
        public Nullable<byte> NumOfPaintOverrideFlag { get; set; }
        public Nullable<double> OffPlaneAngle { get; set; }
        public Nullable<byte> OverrideFlag { get; set; }
        public string RadiationHstryType { get; set; }
        public Nullable<double> SnoutPosition { get; set; }
        public Nullable<byte> SnoutPosOverrideFlag { get; set; }
        public Nullable<double> SOBPWidth { get; set; }
        public Nullable<double> StopAngle { get; set; }
        public string StructureSetUID { get; set; }
        public Nullable<byte> TableTopEccAngleOverFlag { get; set; }
        public Nullable<double> TableTopEccentricAngle { get; set; }
        public string TreatmentRecordUID { get; set; }
        public Nullable<byte> TreatmentTimeOverrideFlag { get; set; }
        public Nullable<double> WedgeAngle { get; set; }
        public Nullable<double> WedgeAngle2 { get; set; }
        public Nullable<double> WedgeDirection { get; set; }
        public Nullable<double> WedgeDirection2 { get; set; }
        public Nullable<byte> WedgeDoseOverrideFlag { get; set; }
        public Nullable<int> WedgeNumber1 { get; set; }
        public Nullable<int> WedgeNumber2 { get; set; }
        public string FieldSetupNote { get; set; }
        public Nullable<double> PSACorrection { get; set; }
        public Nullable<long> SeriesSer { get; set; }
        public Nullable<int> RTPlanAge { get; set; }
        public string FileName { get; set; }
        public Nullable<double> FixLightAzimuthAngle { get; set; }
        public Nullable<double> FixLightPolarPos { get; set; }
        public Nullable<byte> DoseRateOverrideFlag { get; set; }
        public Nullable<double> GantryRtn { get; set; }
        public string GantryRtnDirection { get; set; }
        public string MachineNote { get; set; }
        public Nullable<byte> GantryRtnOverrideFlag { get; set; }
        public Nullable<long> ctrRadiationHstrySer { get; set; }
        public Nullable<long> ctrTreatmentRecordSer { get; set; }
        public Nullable<long> ctrTreatmentRecordSOPClassSer { get; set; }
        public Nullable<int> LogID { get; set; }
    
        public virtual DimCourse DimCourse { get; set; }
        public virtual DimField DimField { get; set; }
        public virtual DimPlan DimPlan { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FactTreatmentHistory> FactTreatmentHistories { get; set; }
    }
}
